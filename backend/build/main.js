!function(e){var t={};function i(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,i),a.l=!0,a.exports}i.m=e,i.c=t,i.d=function(e,t,o){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)i.d(o,a,function(t){return e[t]}.bind(null,a));return o},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=7)}([function(e,t){e.exports=require("express")},function(e,t){e.exports=require("sequelize")},function(e,t,i){const o=i(6);i(3).config({path:".env.production"});const{PRIVATE_KEY:a}=process.env;e.exports=function(e){return function(t,i,s){const l=t.cookies.authorization;if(!l)return i.status(401).send("Access denied. No token provided.");try{const n=o.verify(l,a);if(e){for(let i of e)if(n[i])return t.user=n,s();return i.status(401).send("Unauthorized to perform this action.")}return t.user=n,s()}catch(e){return i.status(400).clearCookie("authorization").send("Invalid token.")}}}},function(e,t){e.exports=require("dotenv")},function(e,t,i){"use strict";i(3).config({path:".env.production"});const{DB_HOST:o,DB_DATABASE:a,DB_USER:s,DB_PASSWORD:l}=process.env,n=i(1),r=new n(a,s,l,{host:o,pool:{max:10,min:0,acquire:3e4,idle:1e4},dialect:"postgres",logging:!1,dialectOptions:{options:{useUTC:!1,dateFirst:1}},define:{timestamps:!1}}),d=r.define("organizations",{name:{type:n.STRING,allowNull:!1},shortName:{type:n.STRING,allowNull:!0},address:{type:n.STRING,allowNull:!0},city:{type:n.STRING,allowNull:!0},state:{type:n.STRING,allowNull:!0},zip:{type:n.INTEGER,min:1e4,max:99999,allowNull:!0},phone:{type:n.INTEGER,allowNull:!0},primaryColor:{type:n.STRING(6),allowNull:!0},secondaryColor:{type:n.STRING(6),allowNull:!0},logo:{type:n.BLOB,allowNull:!0}}),u=r.define("credentials",{email:{type:n.STRING,unique:!0,validate:{isEmail:!0},allowNull:!1},username:{type:n.STRING,unique:!0,allowNull:!1},password:{type:n.STRING,unique:!1,allowNull:!1},isAdmin:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},isEmployee:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},isAthlete:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},isCoach:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1}},{hooks:{beforeValidate:async(e,t)=>{e.username=e.username||e.email.split("@")[0]}}});d.hasMany(u,{foreignKey:{allowNull:!1}}),u.belongsTo(d);const c=r.define("users",{schoolId:{type:n.STRING,allowNull:!0},firstName:{type:n.STRING,allowNull:!0},lastName:{type:n.STRING,allowNull:!0},address:{type:n.STRING,allowNull:!0},city:{type:n.STRING,allowNull:!0},state:{type:n.STRING,allowNull:!0},zip:{type:n.INTEGER,min:1e4,max:99999,allowNull:!0},phone:{type:n.INTEGER,allowNull:!0},lockerNumber:{type:n.INTEGER,allowNull:!0},lockerCode:{type:n.INTEGER,allowNull:!0},gender:{type:n.STRING(1),allowNull:!0},height:{type:n.INTEGER,comment:"in inches",allowNull:!0},weight:{type:n.INTEGER,comment:"in pounds",allowNull:!0}},{timestamps:!0});u.hasOne(c,{foreignKey:{allowNull:!1,unique:!0},onDelete:"CASCADE"}),c.belongsTo(u,{foreignKey:{allowNull:!1,unique:!0},onDelete:"CASCADE"}),d.hasMany(c,{foreignKey:{allowNull:!1}}),c.belongsTo(d,{foreignKey:{allowNull:!1}});const p=r.define("statuses",{name:{type:n.STRING,allowNull:!1},academicYear:{type:n.INTEGER,allowNull:!0}});p.hasMany(c),c.belongsTo(p);const y=r.define("sports",{name:{type:n.STRING,allowNull:!1},gender:{type:n.STRING(1),allowNull:!1}});d.hasMany(y,{foreignKey:{allowNull:!1}}),y.belongsTo(d,{foreignKey:{allowNull:!1}});const m=r.define("sportSizes",{name:{type:n.STRING,allowNull:!1},sizes:{type:n.JSON,allowNull:!1,defaultValue:[]}},{timestamps:!1});y.hasMany(m,{foreignKey:{allowNull:!1}}),m.belongsTo(y,{foreignKey:{allowNull:!1}});const h=r.define("playerSports",{});c.belongsToMany(y,{through:"playerSports"}),y.belongsToMany(c,{through:"playerSports"});const w=r.define("inventories",{name:{type:n.STRING,allowNull:!1},description:{type:n.STRING,allowNull:!0},surplus:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},taxable:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},expendable:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},totalQuantity:{type:n.VIRTUAL},averagePrice:{type:n.VIRTUAL}},{timestamps:!0,hooks:{afterFind:async(e,t)=>{if(e.length)for(let t in e)e[t].totalQuantity=await g.sum("quantity",{where:{inventoryId:e[t].id}}),e[t].averagePrice=await g.sum("price",{where:{inventoryId:e[t].id}})/await g.count({where:{inventoryId:e[t].id}});else e.totalQuantity=await g.sum("quantity",{where:{inventoryId:e.id}}),e.averagePrice=await g.sum("price",{where:{inventoryId:e.id}})/await g.count({where:{inventoryId:e.id}})}}});m.hasMany(w,{foreignKey:{allowNull:!1}}),w.belongsTo(m,{foreignKey:{allowNull:!1}}),d.hasMany(w,{foreignKey:{allowNull:!1}}),w.belongsTo(d,{foreignKey:{allowNull:!1}});const g=r.define("inventorySizes",{size:{type:n.STRING,allowNull:!1},barcode:{type:n.STRING,allowNull:!0},price:{type:n.DECIMAL,allowNull:!0},quantity:{type:n.INTEGER,allowNull:!1,defaultValue:0}},{timestamps:!0});w.hasMany(g,{foreignKey:{allowNull:!1}}),g.belongsTo(w,{foreignKey:{allowNull:!1}});const f=r.define("equipment",{count:{type:n.INTEGER,allowNull:!1}},{timestamps:!0});c.hasMany(f,{foreignKey:{allowNull:!1}}),f.belongsTo(c,{foreignKey:{allowNull:!1}}),g.hasMany(f,{foreignKey:{allowNull:!1}}),f.belongsTo(g,{foreignKey:{allowNull:!1}}),d.hasMany(f,{foreignKey:{allowNull:!1}}),f.belongsTo(d,{foreignKey:{allowNull:!1}});const I=r.define("transactions",{amount:{type:n.INTEGER,allowNull:!1},returned:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1}},{timestamps:!0});f.hasMany(I,{foreignKey:{allowNull:!1}}),I.belongsTo(f,{foreignKey:{allowNull:!1}}),c.hasMany(I,{as:"IssuedBy",foreignKey:{name:"issuedBy",allowNull:!1}}),I.belongsTo(c,{as:"IssuedBy",foreignKey:{name:"issuedBy",allowNull:!1}}),c.hasMany(I,{as:"IssuedTo",foreignKey:{name:"issuedTo",allowNull:!1}}),I.belongsTo(c,{as:"IssuedTo",foreignKey:{name:"issuedTo",allowNull:!1}}),d.hasMany(I,{foreignKey:{allowNull:!1}}),I.belongsTo(d,{foreignKey:{allowNull:!1}});const N=r.define("playerSizes",{size:{type:n.STRING,allowNull:!1}},{timestamps:!1});c.hasMany(N,{foreignKey:{allowNull:!1}}),N.belongsTo(c,{foreignKey:{allowNull:!1}}),m.hasMany(N,{foreignKey:{allowNull:!1}}),N.belongsTo(m,{foreignKey:{allowNull:!1}}),e.exports={User:c,Inventory:w,InventorySize:g,Equipment:f,Transaction:I,PlayerSize:N,PlayerSport:h,Sport:y,SportSize:m,Status:p,Credential:u,Organization:d,db:r}},function(e,t,i){const o=i(13);e.exports=function(e,t){return function(i,a,s){let l=o.parse(i.url,!0).query;for(let i of e)if(!l[i])return a.status(400).json({message:`Missing required parameter: ${i}`,required:e,optional:t});return i.query=l,s()}}},function(e,t){e.exports=require("jsonwebtoken")},function(e,t,i){const o=i(0),a=(i(8),i(9)),s=i(10),l=i(11),n=i(12),r=i(14),d=i(15),u=i(17);i(3).config({path:".env.production"});const{PORT:c,API_VER:p}=process.env,y=o();var m=[],h={origin:function(e,t){-1===m.indexOf(e)&&e?t(new Error("Not allowed by CORS")):t(null,!0)},methods:"GET,PUT,POST,DELETE",allowedHeaders:["authorization","Content-Type","Accept","Origin","X-Request-With"],credentials:!0};y.use(s(h)),y.use(o.json({limit:"50mb"})),y.use(o.urlencoded({extended:!0,limit:"10mb"})),y.use(a()),y.use(l()),y.get("/",(e,t)=>{t.json({message:"Welcome to the AIMS API"})});const w=`/api/v${p}/`;y.use(w+"credentials",d),y.use(w+"users",n),y.use(w+"sports",r),y.use(w+"inventory",u),y.use("*",(e,t,i)=>{t.setHeader("Content-Type","application/json"),i()}),y.use((e,t)=>{t.status(404).send("Route not found.")}),y.use((e,t,i,o)=>{i.status(500).json({message:e.message,error:{}})}),y.set("port",c||5e3);y.listen(y.get("port"),()=>{console.info(`Server listening on localhost:${c}`)})},function(e,t){e.exports=require("morgan")},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("helmet")},function(e,t,i){"use strict";const o=i(0),a=i(1),s=i(2),l=i(5),{User:n,PlayerSport:r,Sport:d,PlayerSize:u,Credential:c,SportSize:p,Status:y}=i(4),m=o.Router();m.post("/",s(["isAdmin"]),async(e,t,i)=>{const o=e.body;try{let i=await c.create({email:o.email,username:o.username,password:o.password||"password123",organizationId:e.user.organizationId}),a=await n.create({schoolId:o.schoolId,firstName:o.firstname,lastName:o.lastName,address:o.address,city:o.city,state:o.state,zip:o.zip,phone:o.phone,gender:o.gender,height:o.height,weight:o.weight,lockerNumber:o.lockerNumber,lockerCode:o.lockerCode,credentialId:i.id,organizationId:e.user.organizationId});t.json(a)}catch(e){i(e)}}),m.get("/",s(["isAdmin","isEmployee","isCoach"]),l([],["page","limit","id","gender","sports[]"]),async(e,t,i)=>{try{let i=[];const o=e.query.page*e.query.limit||0,s=e.query.limit||200;let l=e.user.isCoach&&!e.user.isAdmin&&!e.user.isEmployee;l&&(i=await r.findAll({offset:o,limit:s,where:{userId:e.user.id},attributes:["sportId"]}).map(e=>e.sportId));let m=await n.findAll({where:a.and({organizationId:e.user.organizationId},e.query.id?{id:e.query.id}:null,e.query.gender?{gender:e.query.gender}:null),attributes:{exclude:["createdAt","updatedAt","credentialId","organizationId","statusId"]},include:[{model:d,attributes:["id","name","gender"],through:{attributes:[]},where:a.and(e.query["sports[]"]?a.or({id:e.query["sports[]"]}):null,l?a.or({id:i}):null),include:[{model:p,attributes:e.query.id?["sportId","name","sizes"]:[]}]},{model:u,attributes:e.query.id?["id","sportSizeId","size"]:[]},{model:c,attributes:e.user.isAdmin?{exclude:["organizationId","password"]}:["email","username"]},{model:y}]});t.json(e.query.id&&m.length?m[0]:m)}catch(e){i(e)}}),m.get("/current",s(),async(e,t,i)=>{try{let i=await n.findOne({where:{credentialId:e.user.id},attributes:{exclude:["createdAt","updatedAt","credentialId","organizationId","statusId"]},include:[{model:d,attributes:["id","name","gender"],through:{attributes:[]},include:[{model:p,attributes:["sportId","name","sizes"]}]},{model:u,attributes:["id","sportSizeId","size"]},{model:c,attributes:e.user.isAdmin?{exclude:["organizationId","password"]}:["email","username"]},{model:y}]});t.json(i)}catch(e){i(e)}}),m.put("/current",s(),async(e,t,i)=>{let o=e.body;try{let i=await n.findOne({where:{credentialId:e.user.id}});e.user.isAdmin&&(i.schoolId=o.schoolId),(e.user.isAdmin||e.user.isEmployee)&&(i.lockerNumber=o.lockerNumber,i.lockerCode=o.lockerCode),i.firstName=o.firstname,i.lastName=o.lastName,i.address=o.address,i.city=o.city,i.state=o.state,i.zip=o.zip,i.phone=o.phone,i.gender=o.gender,i.height=o.height,i.weight=o.weight,await i.save(),t.json(i)}catch(e){i(e)}}),m.put("/",s(["isAdmin","isEmployee"]),l(["id"]),async(e,t,i)=>{let o=e.body;try{let i=await n.findOne({where:{id:e.query.id}});e.user.isAdmin&&(i.schoolId=o.schoolId),i.lockerNumber=o.lockerNumber,i.lockerCode=o.lockerCode,i.firstName=o.firstname,i.lastName=o.lastName,i.address=o.address,i.city=o.city,i.state=o.state,i.zip=o.zip,i.phone=o.phone,i.gender=o.gender,i.height=o.height,i.weight=o.weight,await i.save(),t.json(i)}catch(e){i(e)}}),e.exports=m},function(e,t){e.exports=require("url")},function(e,t,i){"use strict";const o=i(0),a=i(1),{Sport:s,PlayerSport:l,User:n}=i(4),r=i(2),d=i(5),u=o.Router();u.post("/",r(["isAdmin"]),async(e,t,i)=>{const o=e.body;try{let i=await s.create({...o,organizationId:e.user.organizationId});t.json(i)}catch(e){i(e)}}),u.get("/",r(),d([],["id"]),async(e,t,i)=>{try{let i=await s.findAll({where:a.and({organizationId:e.user.organizationId},e.query.id?{id:e.query.id}:null),attributes:{exclude:["organizationId"]}});t.json(e.query.id&&i.length?i[0]:i)}catch(e){i(e)}}),u.put("/",r(["isAdmin"]),d(["id"]),async(e,t,i)=>{const o=e.body;try{await s.update({name:o.name,gender:o.gender,sizes:o.sizes},{where:{id:e.query.id,organizationId:e.user.organizationId}});let i=await s.findOne({where:{id:e.query.id},attributes:{exclude:["organizationId"]}});t.json(i)}catch(e){i(e)}}),u.delete("/",r(["isAdmin"]),d(["id"]),async(e,t,i)=>{try{await s.destroy({where:{id:e.query.id,organizationId:e.user.organizationId}}),t.send("Sport "+e.query.id+" deleted.")}catch(e){i(e)}}),u.put("/user",r(["isAdmin","isEmployee"]),d(["userId"]),async(e,t,i)=>{let o=e.body.sports;try{let i=await l.findAll({where:{userId:e.query.userId}}).map(e=>e.sportId),a=o.filter(e=>!i.includes(e)),r=i.filter(e=>!o.includes(e));for(let t of a)await l.create({userId:e.query.userId,sportId:t});for(let t of r)await l.destroy({where:{userId:e.query.userId,sportId:t}});let d=await n.findOne({where:{id:e.query.userId},include:[{model:s,through:{attributes:[]},attributes:{exclude:["organizationId"]}}]});t.json(d.sports)}catch(e){i(e)}}),e.exports=u},function(e,t,i){"use strict";const o=i(0),{Credential:a,Organization:s,User:l}=i(4),n=i(2),r=i(6),d=i(16),u=i(1),c=o.Router();i(3).config({path:".env.production"});const{PRIVATE_KEY:p}=process.env;c.get("/current",n(),async(e,t,i)=>{try{let i=await a.findOne({where:{id:e.user.id},attributes:["email","username","isAdmin","isEmployee","isAthlete","isCoach"],include:{model:s}});t.json(i)}catch(e){i(e)}}),c.post("/signup",async(e,t,i)=>{const o=e.body;try{let e=await a.create({email:o.email,username:o.username,password:await d.hash(o.password,10),organizationId:1});await l.create({credentialId:e.id,organizationId:e.organizationId});let i=await s.findOne({where:{id:1}});const n=await r.sign({id:e.id,organizationId:e.organizationId,isAdmin:e.isAdmin,isEmployee:e.isEmployee,isAthlete:e.isAthlete,isCoach:e.isCoach},p,{expiresIn:"30d"});t.status(201).cookie("authorization",n,{expires:o.remember?new Date(Date.now()+2592e6):0,httpOnly:!0}).json({email:e.email,username:e.username,isAdmin:e.isAdmin,isEmployee:e.isEmployee,isCoach:e.isCoach,isAthlete:e.isAthlete,organization:i})}catch(e){i(e)}}),c.post("/login",async(e,t,i)=>{const o=e.body;try{let e=await a.findOne({where:u.or({email:o.email},{username:o.username?o.username:o.email.split("@")[0]}),include:{model:s}});e?await d.compare(o.password,e.password,(i,a)=>{if(a){let i=r.sign({id:e.id,organizationId:e.organizationId,isAdmin:e.isAdmin,isEmployee:e.isEmployee,isAthlete:e.isAthlete,isCoach:e.isCoach},p,{expiresIn:"30d"});t.cookie("authorization",i,{expires:o.remember?new Date(Date.now()+2592e6):0,httpOnly:!0}).json({email:e.email,username:e.username,isAdmin:e.isAdmin,isEmployee:e.isEmployee,isCoach:e.isCoach,isAthlete:e.isAthlete,organization:e.organization})}else t.status(401).send("Credentials not valid")}):t.status(401).send("Credentials not found")}catch(e){i(e)}}),c.get("/logout",n(),async(e,t,i)=>{t.status(200).clearCookie("authorization").send("User has been logged out.")}),c.put("/current",n(),async(e,t,i)=>{let o=e.body;try{let i=await a.findOne({where:{id:e.user.id}});if(i.email=o.email||i.email,i.username=o.username||i.username,e.user.isAdmin){i.isEmployee=!0===o.isEmployee||!1===o.isEmployee?o.isEmployee:i.isEmployee,i.isCoach=!0===o.isCoach||!1===o.isCoach?o.isCoach:i.isCoach,i.isAthlete=!0===o.isAthlete||!1===o.isAthlete?o.isAthlete:i.isAthlete,await i.save();let e=r.sign({id:i.id,organizationId:i.organizationId,isAdmin:i.isAdmin,isEmployee:i.isEmployee,isAthlete:i.isAthlete,isCoach:i.isCoach},p,{expiresIn:"30d"});t.cookie("authorization",e,{expires:0,httpOnly:!0})}t.send("Credential update successful")}catch(e){i(e)}}),c.put("/",n(["isAdmin"]),async(e,t,i)=>{if(e.query.id){let o=e.body;try{let i=await a.findOne({where:{id:e.query.id}});i.email=o.email||i.email,i.username=o.username||i.username,e.user.id!==i.id&&(i.isAdmin=!0===o.isAdmin||!1===o.isAdmin?o.isAdmin:i.isAdmin),i.isEmployee=!0===o.isEmployee||!1===o.isEmployee?o.isEmployee:i.isEmployee,i.isCoach=!0===o.isCoach||!1===o.isCoach?o.isCoach:i.isCoach,i.isAthlete=!0===o.isAthlete||!1===o.isAthlete?o.isAthlete:i.isAthlete,await i.save(),t.send("Credential update successful")}catch(e){i(e)}}else t.status(400).send("No user ID provided.")}),c.put("/changePassword",n(),async(e,t,i)=>{const o=e.body;try{let i=await a.findOne({where:{id:e.user.id}});i?await d.compare(o.password,i.password,async(e,a)=>{a?o.password!==o.newPassword?(i.password=await d.hash(o.newPassword,10),await i.save(),t.send("Password successfully changed.")):t.status(400).send("Password cannot match previous password."):t.status(401).send("Credentials not valid")}):t.status(401).send("Credentials not found")}catch(e){i(e)}}),e.exports=c},function(e,t){e.exports=require("bcrypt")},function(e,t,i){"use strict";const o=i(0),a=i(1),s=i(5),{Inventory:l,InventorySize:n,SportSize:r,Sport:d}=i(4),u=i(2),c=o.Router();c.get("/",u(["isAdmin","isEmployee","isCoach"]),s([],["id","surplus","sportSizeId","sportId","gender"]),async(e,t,i)=>{try{let i=await l.findAll({where:a.and(e.query.id?{id:e.query.id}:null,{organizationId:e.user.organizationId},e.query.surplus?{surplus:e.query.surplus}:null,e.query.sportSizeId?{sportSizeId:e.query.sportSizeId}:null),attributes:{exclude:["createdAt","updatedAt","sportSizeId","organizationId"]},include:[{model:r,where:a.and(e.query.sportSizeId?{id:e.query.sportSizeId}:null,e.query.sportId?{sportId:e.query.sportId}:null),attributes:{exclude:e.query.id?["sportId"]:["sportId","sizes"]},include:[{model:d,where:a.and(e.query.sportId?{id:e.query.sportId}:null,e.query.gender?{gender:e.query.gender}:null),attributes:{exclude:["organizationId"]}}]},{model:n,attributes:e.query.id?["id","size","barcode","price","quantity"]:[]}]});t.json(e.query.id&&i.length?i[0]:i)}catch(e){i(e)}}),c.post("/",u(["isAdmin","isEmployee"]),async(e,t,i)=>{let o=e.body;try{let i=await l.create({name:o.name,description:o.description,surplus:o.surplus,taxable:o.taxable,expendable:o.expendable,organizationId:e.user.organizationId,sportSizeId:o.sportSizeId});for(let e of o.inventorySizes)await n.create({size:e.size,barcode:e.barcode,price:e.price,quantity:e.quantity,inventoryId:i.id});t.status(201).json(await l.findOne({where:{id:i.id},attributes:{exclude:["createdAt","updatedAt","sportSizeId"]},include:[{model:n,attributes:{exclude:["createdAt","updatedAt"]}},{model:r,attributes:{exclude:["sportId"]},include:[{model:d,attributes:{exclude:["organizationId"]}}]}]}))}catch(e){i(e)}}),c.put("/",u(["isAdmin","isEmployee"]),s(["id"]),async(e,t,i)=>{let o=e.body;try{let i=await l.findOne({where:{id:e.query.id},include:[{model:n}]});i.name=o.name,i.description=o.description,i.surplus=o.surplus,i.taxable=o.taxable,i.expendable=o.expendable,i.sportSizeId=o.sportSizeId,await i.save(),t.json(i)}catch(e){i(e)}}),e.exports=c}]);