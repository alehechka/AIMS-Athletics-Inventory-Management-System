!function(e){var t={};function i(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=e,i.c=t,i.d=function(e,t,a){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(i.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(a,s,function(t){return e[t]}.bind(null,s));return a},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=8)}([function(e,t){e.exports=require("sequelize")},function(e,t){e.exports=require("express")},function(e,t,i){const a=i(6);i(5).config({path:".env.production"});const{PRIVATE_KEY:s}=process.env;e.exports=function(e){return function(t,i,o){const l=t.cookies.authorization;if(!l)return i.status(401).send("Access denied. No token provided.");try{const r=a.verify(l,s);if(r.highestAccess={},r.isAdmin?r.highestAccess.isAdmin=!0:r.isEmployee?r.highestAccess.isEmployee=!0:r.isCoach?r.highestAccess.isCoach=!0:r.isAthlete&&(r.highestAccess.isAthlete=!0),e){for(let i of e)if(r[i])return t.user=r,o();return i.status(401).send("Unauthorized to perform this action.")}return t.user=r,o()}catch(e){return i.status(400).clearCookie("authorization").send("Invalid token.")}}}},function(e,t,i){const a=i(14);e.exports=function(e,t){return function(i,s,o){let l=a.parse(i.url,!0).query;for(let i of e)if(!l[i])return s.status(400).json({message:`Missing required parameter: ${i}`,required:e,optional:t});return i.query=l,o()}}},function(e,t,i){"use strict";i(5).config({path:".env.production"});const{DB_HOST:a,DB_DATABASE:s,DB_USER:o,DB_PASSWORD:l}=process.env,r=i(7),n=i(0),{DataTypes:d}=i(0),u=new n(s,o,l,{host:a,pool:{max:10,min:0,acquire:3e4,idle:1e4},dialect:"postgres",logging:!1,dialectOptions:{options:{useUTC:!1,dateFirst:1}},define:{timestamps:!1}}),c=u.define("organizations",{name:{type:n.STRING,allowNull:!1},shortName:{type:n.STRING,allowNull:!0},address:{type:n.STRING,allowNull:!0},city:{type:n.STRING,allowNull:!0},state:{type:n.STRING,allowNull:!0},zip:{type:n.INTEGER,min:1e4,max:99999,allowNull:!0},phone:{type:n.INTEGER,allowNull:!0},primaryColor:{type:n.STRING(6),allowNull:!0},secondaryColor:{type:n.STRING(6),allowNull:!0},logo:{type:n.STRING,allowNull:!0}}),y=u.define("credentials",{email:{type:n.STRING,unique:!0,validate:{isEmail:!0},allowNull:!1},username:{type:n.STRING,unique:!0,allowNull:!1},password:{type:n.STRING,unique:!1,allowNull:!1},isAdmin:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},isEmployee:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},isAthlete:{type:n.BOOLEAN,allowNull:!1,defaultValue:!0},isCoach:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},isApproved:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},isVerified:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1}},{hooks:{beforeValidate:async(e,t)=>{e.username=e.username||e.email.split("@")[0]}}});c.hasMany(y,{foreignKey:{allowNull:!1}}),y.belongsTo(c);const p=u.define("users",{schoolId:{type:n.STRING,allowNull:!0},firstName:{type:n.STRING,allowNull:!0},lastName:{type:n.STRING,allowNull:!0},address:{type:n.STRING,allowNull:!0},city:{type:n.STRING,allowNull:!0},state:{type:n.STRING,allowNull:!0},zip:{type:n.INTEGER,min:1e4,max:99999,allowNull:!0},phone:{type:n.INTEGER,allowNull:!0},lockerNumber:{type:n.INTEGER,allowNull:!0},lockerCode:{type:n.INTEGER,allowNull:!0},gender:{type:n.STRING(1),allowNull:!0},height:{type:n.INTEGER,comment:"in inches",allowNull:!0},weight:{type:n.INTEGER,comment:"in pounds",allowNull:!0},active:{type:n.BOOLEAN,allowNull:!1,defaultValue:!0}},{timestamps:!0});y.hasOne(p,{foreignKey:{allowNull:!1,unique:!0},onDelete:"CASCADE"}),p.belongsTo(y,{foreignKey:{allowNull:!1,unique:!0},onDelete:"CASCADE"}),c.hasMany(p,{foreignKey:{allowNull:!1}}),p.belongsTo(c,{foreignKey:{allowNull:!1}});const m=u.define("statuses",{name:{type:n.STRING,allowNull:!1},academicYear:{type:n.INTEGER,allowNull:!0}});m.hasMany(p),p.belongsTo(m);const h=u.define("sports",{name:{type:n.STRING,allowNull:!1},gender:{type:n.STRING(1),allowNull:!0},icon:{type:n.STRING,allowNull:!0},default:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1}});c.hasMany(h,{foreignKey:{allowNull:!1}}),h.belongsTo(c,{foreignKey:{allowNull:!1}});const w=u.define("sportSizes",{name:{type:n.STRING,allowNull:!1},sizes:{type:n.JSON,allowNull:!1,defaultValue:[]}},{timestamps:!1});h.hasMany(w,{foreignKey:{allowNull:!1}}),w.belongsTo(h,{foreignKey:{allowNull:!1}});const g=u.define("userSports",{});p.belongsToMany(h,{through:"userSports"}),h.belongsToMany(p,{through:"userSports"});const I=u.define("teams",{name:{type:n.STRING,allowNull:!1},description:{type:n.STRING,allowNull:!0},schoolYear:{type:n.INTEGER,allowNull:!0},season:{type:d.STRING,allowNull:!0}});h.hasMany(I,{foreignKey:{allowNull:!1}}),I.belongsTo(h,{foreignKey:{allowNull:!1}});const f=u.define("teamMembers",{});p.belongsToMany(I,{through:"teamMembers"}),I.belongsToMany(p,{through:"teamMembers"});const N=u.define("inventories",{name:{type:n.STRING,allowNull:!1},description:{type:n.STRING,allowNull:!0},surplus:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},taxable:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},expendable:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1},totalQuantity:{type:n.VIRTUAL},averagePrice:{type:n.VIRTUAL}},{timestamps:!0,hooks:{afterFind:async(e,t)=>{if(e.length)for(let t in e)e[t].totalQuantity=await b.sum("quantity",{where:{inventoryId:e[t].id}}),e[t].averagePrice=await b.sum("price",{where:{inventoryId:e[t].id}})/await b.count({where:{inventoryId:e[t].id}});else e.totalQuantity=await b.sum("quantity",{where:{inventoryId:e.id}}),e.averagePrice=await b.sum("price",{where:{inventoryId:e.id}})/await b.count({where:{inventoryId:e.id}})}}});w.hasMany(N,{foreignKey:{allowNull:!1}}),N.belongsTo(w,{foreignKey:{allowNull:!1}}),c.hasMany(N,{foreignKey:{allowNull:!1}}),N.belongsTo(c,{foreignKey:{allowNull:!1}});const b=u.define("inventorySizes",{size:{type:n.STRING,allowNull:!1},barcode:{type:n.STRING,allowNull:!0},price:{type:n.DECIMAL,allowNull:!0},quantity:{type:n.INTEGER,allowNull:!1,defaultValue:0}},{timestamps:!0});N.hasMany(b,{foreignKey:{allowNull:!1}}),b.belongsTo(N,{foreignKey:{allowNull:!1}});const A=u.define("equipment",{count:{type:n.INTEGER,allowNull:!1}},{timestamps:!0});p.hasMany(A,{foreignKey:{allowNull:!1}}),A.belongsTo(p,{foreignKey:{allowNull:!1}}),b.hasMany(A,{foreignKey:{allowNull:!1}}),A.belongsTo(b,{foreignKey:{allowNull:!1}}),c.hasMany(A,{foreignKey:{allowNull:!1}}),A.belongsTo(c,{foreignKey:{allowNull:!1}});const z=u.define("transactions",{amount:{type:n.INTEGER,allowNull:!1},returned:{type:n.BOOLEAN,allowNull:!1,defaultValue:!1}},{timestamps:!0});A.hasMany(z,{foreignKey:{allowNull:!1}}),z.belongsTo(A,{foreignKey:{allowNull:!1}}),p.hasMany(z,{as:"IssuedBy",foreignKey:{name:"issuedBy",allowNull:!1}}),z.belongsTo(p,{as:"IssuedBy",foreignKey:{name:"issuedBy",allowNull:!1}}),p.hasMany(z,{as:"IssuedTo",foreignKey:{name:"issuedTo",allowNull:!1}}),z.belongsTo(p,{as:"IssuedTo",foreignKey:{name:"issuedTo",allowNull:!1}}),c.hasMany(z,{foreignKey:{allowNull:!1}}),z.belongsTo(c,{foreignKey:{allowNull:!1}});const q=u.define("userSizes",{size:{type:n.STRING,allowNull:!1}},{timestamps:!1});p.hasMany(q,{foreignKey:{allowNull:!1}}),q.belongsTo(p,{foreignKey:{allowNull:!1}}),w.hasMany(q,{foreignKey:{allowNull:!1}}),q.belongsTo(w,{foreignKey:{allowNull:!1}}),e.exports={User:p,Inventory:N,InventorySize:b,Equipment:A,Transaction:z,UserSize:q,UserSport:g,Sport:h,SportSize:w,Status:m,Credential:y,hashPassword:async e=>await(await r.hash(e,10)),Organization:c,Team:I,TeamMember:f,db:u}},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("bcrypt")},function(e,t,i){"use strict";const a=i(1),s=(i(9),i(10)),o=i(11),l=i(12),r=i(13),n=i(15),d=i(16),u=i(17),c=i(18);i(5).config({path:".env.production"});const{PORT:y,API_VER:p}=process.env,m=a();var h=[],w={origin:function(e,t){-1===h.indexOf(e)&&e?t(new Error("Not allowed by CORS")):t(null,!0)},methods:"GET,PUT,POST,DELETE",allowedHeaders:["authorization","Content-Type","Accept","Origin","X-Request-With"],credentials:!0};m.use(o(w)),m.use(a.json({limit:"50mb"})),m.use(a.urlencoded({extended:!0,limit:"10mb"})),m.use(s()),m.use(l()),m.get("/",(e,t)=>{t.json({message:"Welcome to the AIMS API"})});const g=`/api/v${p}/`;m.use(g+"credentials",d),m.use(g+"users",r),m.use(g+"sports",n),m.use(g+"inventory",u),m.use(g+"equipment",c),m.use("*",(e,t,i)=>{t.setHeader("Content-Type","application/json"),i()}),m.use((e,t)=>{t.status(404).send("Route not found.")}),m.use((e,t,i,a)=>{i.status(500).json({message:e.message,error:{}})}),m.set("port",y||5e3);m.listen(m.get("port"),()=>{console.info(`Server listening on localhost:${y}`)})},function(e,t){e.exports=require("morgan")},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("helmet")},function(e,t,i){"use strict";const a=i(1),s=i(0),o=i(2),l=i(3),{User:r,UserSport:n,Sport:d,UserSize:u,Credential:c,SportSize:y,Status:p,hashPassword:m}=i(4),h=a.Router();h.post("/",o(["isAdmin"]),async(e,t,i)=>{const a=e.body;try{let i=await c.create({email:a.email,username:a.username,password:await m(a.password||"password123"),organizationId:e.user.organizationId}),s=await r.create({schoolId:a.schoolId,firstName:a.firstname,lastName:a.lastName,address:a.address,city:a.city,state:a.state,zip:a.zip,phone:a.phone,gender:a.gender,height:a.height,weight:a.weight,lockerNumber:a.lockerNumber,lockerCode:a.lockerCode,credentialId:i.id,organizationId:e.user.organizationId});await n.create({userId:s.id,sportId:1}),t.json(s)}catch(e){i(e)}}),h.get("/",o(["isAdmin","isEmployee","isCoach"]),l([],["page","limit","id","gender","sports[]","isAdmin","isEmployee","isCoach","isAthlete"]),async(e,t,i)=>{try{let i=[];e.user.highestAccess.isCoach&&(i=await n.findAll({where:{userId:e.user.id},attributes:["sportId"]}).map(e=>e.sportId));const a=e.query.page*e.query.limit||0;e.query.limit;let o=await r.findAll({offset:a,where:s.and({organizationId:e.user.organizationId},e.query.id?{id:e.query.id}:null,e.query.gender?{gender:e.query.gender}:null),attributes:{exclude:["createdAt","updatedAt","credentialId","organizationId","statusId"]},include:[{model:d,attributes:["id","name","gender"],through:{attributes:[]},where:s.and(e.query["sports[]"]?s.or({id:e.query["sports[]"]}):null,e.user.highestAccess.isCoach?s.or({id:i}):null),include:[{model:y,attributes:e.query.id?["sportId","name","sizes"]:[]}]},{model:u,attributes:e.query.id?["id","sportSizeId","size"]:[]},{model:c,attributes:e.user.isAdmin?{exclude:["organizationId","password"]}:["email","username"],where:e.query.isAdmin||e.query.isEmployee||e.query.isCoach||e.query.isAthlete?s.or(e.query.isAdmin?{isAdmin:e.query.isAdmin}:null,e.query.isEmployee?{isEmployee:e.query.isEmployee}:null,e.query.isCoach?{isCoach:e.query.isCoach}:null,e.query.isAthlete?{isAthlete:e.query.isAthlete}:null):null},{model:p}]});t.json(e.query.id&&o.length?o[0]:o)}catch(e){i(e)}}),h.get("/current",o(),async(e,t,i)=>{try{let i=await r.findOne({where:{credentialId:e.user.id},attributes:{exclude:["createdAt","updatedAt","credentialId","organizationId","statusId"]},include:[{model:d,attributes:["id","name","gender"],through:{attributes:[]},include:[{model:y,attributes:["sportId","name","sizes"]}]},{model:u,attributes:["id","sportSizeId","size"]},{model:c,attributes:e.user.isAdmin?{exclude:["organizationId","password"]}:["email","username"]},{model:p}]});t.json(i)}catch(e){i(e)}}),h.put("/current",o(),async(e,t,i)=>{let a=e.body;try{let i=await r.findOne({where:{credentialId:e.user.id}});e.user.isAdmin&&(i.schoolId=a.schoolId),(e.user.isAdmin||e.user.isEmployee)&&(i.lockerNumber=a.lockerNumber,i.lockerCode=a.lockerCode),i.firstName=a.firstname,i.lastName=a.lastName,i.address=a.address,i.city=a.city,i.state=a.state,i.zip=a.zip,i.phone=a.phone,i.gender=a.gender,i.height=a.height,i.weight=a.weight,await i.save(),t.json(i)}catch(e){i(e)}}),h.put("/",o(["isAdmin","isEmployee"]),l(["id"]),async(e,t,i)=>{let a=e.body;try{let i=await r.findOne({where:{id:e.query.id}});e.user.isAdmin&&(i.schoolId=a.schoolId),i.lockerNumber=a.lockerNumber,i.lockerCode=a.lockerCode,i.firstName=a.firstname,i.lastName=a.lastName,i.address=a.address,i.city=a.city,i.state=a.state,i.zip=a.zip,i.phone=a.phone,i.gender=a.gender,i.height=a.height,i.weight=a.weight,await i.save(),t.json(i)}catch(e){i(e)}}),e.exports=h},function(e,t){e.exports=require("url")},function(e,t,i){"use strict";const a=i(1),s=i(0),{Sport:o,UserSport:l,User:r}=i(4),n=i(2),d=i(3),u=a.Router();u.post("/",n(["isAdmin"]),async(e,t,i)=>{const a=e.body;try{let i=await o.create({name:a.name,gender:a.gender,icon:a.icon,organizationId:e.user.organizationId});t.json(i)}catch(e){i(e)}}),u.get("/",n(),d([],["id"]),async(e,t,i)=>{try{let i=await o.findAll({where:s.and({organizationId:e.user.organizationId},e.query.id?{id:e.query.id}:null),attributes:{exclude:["organizationId"]}});t.json(e.query.id&&i.length?i[0]:i)}catch(e){i(e)}}),u.put("/",n(["isAdmin"]),d(["id"]),async(e,t,i)=>{const a=e.body;try{await o.update({name:a.name,gender:a.gender,icon:a.icon},{where:{id:e.query.id,organizationId:e.user.organizationId}});let i=await o.findOne({where:{id:e.query.id},attributes:{exclude:["organizationId"]}});t.json(i)}catch(e){i(e)}}),u.delete("/",n(["isAdmin"]),d(["id"]),async(e,t,i)=>{try{await o.destroy({where:{id:e.query.id,organizationId:e.user.organizationId}}),t.send("Sport "+e.query.id+" deleted.")}catch(e){i(e)}}),u.put("/user",n(["isAdmin","isEmployee"]),d(["userId"]),async(e,t,i)=>{let a=e.body.sports;try{let i=await l.findAll({where:{userId:e.query.userId}}).map(e=>e.sportId),s=a.filter(e=>!i.includes(e)),n=i.filter(e=>!a.includes(e));for(let t of s)await l.create({userId:e.query.userId,sportId:t});for(let t of n)await l.destroy({where:{userId:e.query.userId,sportId:t}});let d=await r.findOne({where:{id:e.query.userId},include:[{model:o,through:{attributes:[]},attributes:{exclude:["organizationId"]}}]});t.json(d.sports)}catch(e){i(e)}}),e.exports=u},function(e,t,i){"use strict";const a=i(1),{Credential:s,Organization:o,User:l,UserSport:r,hashPassword:n}=i(4),d=i(2),u=i(3),c=i(6),y=i(7),p=i(0),m=a.Router();i(5).config({path:".env.production"});const{PRIVATE_KEY:h}=process.env;m.get("/current",d(),async(e,t,i)=>{try{let i=await s.findOne({where:{id:e.user.id},attributes:["email","username","isAdmin","isEmployee","isAthlete","isCoach"],include:{model:o}});t.json(i)}catch(e){i(e)}}),m.post("/signup",async(e,t,i)=>{const a=e.body;try{let e=await s.create({email:a.email,username:a.username,password:await n(a.password),organizationId:1}),i=await l.create({credentialId:e.id,organizationId:e.organizationId});await r.create({userId:i.id,sportId:1});let d=await o.findOne({where:{id:1}});const u=await c.sign({id:e.id,organizationId:e.organizationId,isAdmin:e.isAdmin,isEmployee:e.isEmployee,isAthlete:e.isAthlete,isCoach:e.isCoach},h,{expiresIn:"30d"});t.status(201).cookie("authorization",u,{expires:a.remember?new Date(Date.now()+2592e6):0,httpOnly:!0}).json({email:e.email,username:e.username,isAdmin:e.isAdmin,isEmployee:e.isEmployee,isCoach:e.isCoach,isAthlete:e.isAthlete,organization:d})}catch(e){t.status(401).send("Email or username already in use.")}}),m.post("/login",async(e,t,i)=>{const a=e.body;try{let e=await s.findOne({where:p.or({email:a.email},{username:a.username?a.username:a.email.split("@")[0]}),include:{model:o}});e?await y.compare(a.password,e.password,(i,s)=>{if(s){let i=c.sign({id:e.id,organizationId:e.organizationId,isAdmin:e.isAdmin,isEmployee:e.isEmployee,isAthlete:e.isAthlete,isCoach:e.isCoach},h,{expiresIn:"30d"});t.cookie("authorization",i,{expires:a.remember?new Date(Date.now()+2592e6):0,httpOnly:!0}).json({email:e.email,username:e.username,isAdmin:e.isAdmin,isEmployee:e.isEmployee,isCoach:e.isCoach,isAthlete:e.isAthlete,organization:e.organization})}else t.status(401).send("Credentials not valid")}):t.status(401).send("Credentials not found")}catch(e){i(e)}}),m.get("/logout",d(),async(e,t,i)=>{t.status(200).clearCookie("authorization").send("User has been logged out.")}),m.put("/current",d(),async(e,t,i)=>{let a=e.body;try{let i=await s.findOne({where:{id:e.user.id}});if(i.email=a.email||i.email,i.username=a.username||i.username,e.user.isAdmin){i.isEmployee=!0===a.isEmployee||!1===a.isEmployee?a.isEmployee:i.isEmployee,i.isCoach=!0===a.isCoach||!1===a.isCoach?a.isCoach:i.isCoach,i.isAthlete=!0===a.isAthlete||!1===a.isAthlete?a.isAthlete:i.isAthlete,await i.save();let e=c.sign({id:i.id,organizationId:i.organizationId,isAdmin:i.isAdmin,isEmployee:i.isEmployee,isAthlete:i.isAthlete,isCoach:i.isCoach},h,{expiresIn:"30d"});t.cookie("authorization",e,{expires:0,httpOnly:!0})}t.send("Credential update successful")}catch(e){i(e)}}),m.put("/",d(["isAdmin"]),u(["id"]),async(e,t,i)=>{let a=e.body;try{let i=await s.findOne({where:{id:e.query.id}});i.email=a.email||i.email,i.username=a.username||i.username,e.user.id!==i.id&&(i.isAdmin=!0===a.isAdmin||!1===a.isAdmin?a.isAdmin:i.isAdmin),i.isEmployee=!0===a.isEmployee||!1===a.isEmployee?a.isEmployee:i.isEmployee,i.isCoach=!0===a.isCoach||!1===a.isCoach?a.isCoach:i.isCoach,i.isAthlete=!0===a.isAthlete||!1===a.isAthlete?a.isAthlete:i.isAthlete,await i.save(),t.send("Credential update successful")}catch(e){i(e)}}),m.put("/changePassword",d(),async(e,t,i)=>{const a=e.body;try{let i=await s.findOne({where:{id:e.user.id}});i?await y.compare(a.password,i.password,async(e,s)=>{s?a.password!==a.newPassword?(i.password=await n(a.newPassword),await i.save(),t.send("Password successfully changed.")):t.status(400).send("Password cannot match previous password."):t.status(401).send("Credentials not valid")}):t.status(401).send("Credentials not found")}catch(e){i(e)}}),e.exports=m},function(e,t,i){"use strict";const a=i(1),s=i(0),o=i(3),{Inventory:l,InventorySize:r,SportSize:n,Sport:d}=i(4),u=i(2),c=a.Router();c.get("/",u(["isAdmin","isEmployee","isCoach"]),o([],["page","limit","id","surplus","sportSizeId","sports[]","gender","taxable","expendable"]),async(e,t,i)=>{try{const i=e.query.page*e.query.limit||0,a=e.query.limit||200;let o=await l.findAll({offset:i,limit:a,where:s.and(e.query.id?{id:e.query.id}:null,{organizationId:e.user.organizationId},e.query.surplus?{surplus:e.query.surplus}:null,e.query.sportSizeId?{sportSizeId:e.query.sportSizeId}:null,e.query.taxable?{taxable:e.query.taxable}:null,e.query.expendable?{expendable:e.query.expendable}:null),attributes:{exclude:["createdAt","updatedAt","sportSizeId","organizationId"]},include:[{model:n,where:s.and(e.query.sportSizeId?{id:e.query.sportSizeId}:null,e.query["sports[]"]?s.or({sportId:e.query["sports[]"]}):null),attributes:{exclude:e.query.id?["sportId"]:["sportId","sizes"]},include:[{model:d,where:s.and(e.query.gender?{gender:e.query.gender}:null),attributes:{exclude:["organizationId"]}}]},{model:r,attributes:e.query.id?["id","size","barcode","price","quantity"]:[]}]});t.json(e.query.id&&o.length?o[0]:o)}catch(e){i(e)}}),c.post("/",u(["isAdmin","isEmployee"]),async(e,t,i)=>{let a=e.body;try{let i=await l.create({name:a.name,description:a.description,surplus:a.surplus,taxable:a.taxable,expendable:a.expendable,organizationId:e.user.organizationId,sportSizeId:a.sportSizeId});for(let e of a.inventorySizes)await r.create({size:e.size,barcode:e.barcode,price:e.price,quantity:e.quantity,inventoryId:i.id});t.status(201).json(await l.findOne({where:{id:i.id},attributes:{exclude:["createdAt","updatedAt","sportSizeId","organizationId"]},include:[{model:r,attributes:{exclude:["createdAt","updatedAt","inventoryId"]}},{model:n,attributes:{exclude:["sportId"]},include:[{model:d,attributes:{exclude:["organizationId"]}}]}]}))}catch(e){i(e)}}),c.put("/",u(["isAdmin","isEmployee"]),o(["id"]),async(e,t,i)=>{let a=e.body;try{let i=await l.findOne({where:{id:e.query.id},attributes:{exclude:["createdAt","updatedAt","sportSizeId","organizationId"]},include:[{model:r,attributes:{exclude:["createdAt","updatedAt","inventoryId"]}},{model:n,attributes:{exclude:["sportId"]},include:[{model:d,attributes:{exclude:["organizationId"]}}]}]});i.name=a.name,i.description=a.description,i.surplus=a.surplus,i.taxable=a.taxable,i.expendable=a.expendable,i.sportSizeId=a.sportSizeId,await i.save();let s=a.inventorySizes.filter(e=>!e.id),o=i.inventorySizes.filter(e=>0===a.inventorySizes.filter(t=>t.id===e.id).length),u=a.inventorySizes.filter(e=>e.id);for(let e of u)await r.update({size:e.size,barcode:e.barcode,price:e.price,quantity:e.quantity},{where:{id:e.id}});for(let e of s)await r.create({size:e.size,barcode:e.barcode,price:e.price,quantity:e.quantity,inventoryId:i.id});for(let e of o)await r.destroy({where:{id:e.id}});t.json(await i.reload())}catch(e){i(e)}}),e.exports=c},function(e,t,i){"use strict";const a=i(1),s=i(0),{Equipment:o,InventorySize:l,Inventory:r,SportSize:n,Sport:d,User:u,UserSport:c}=i(4),y=i(2),p=i(3),m=a.Router();m.get("/",y(["isAdmin","isEmployee","isCoach"]),p([],["page","limit","userId","sports[]","sportSizeId","inventoryId","taxable","surplus","expendable"]),async(e,t,i)=>{try{let i=[];e.user.highestAccess.isCoach&&(i=await c.findAll({where:{userId:e.user.id},attributes:["sportId"]}).map(e=>e.sportId));let a=await o.findAll({where:s.and(e.query.userId?{userId:e.query.userId}:null),attributes:{exclude:["createdAt","updatedAt","inventorySizeId","organizationId"]},include:[{model:l,attributes:{exclude:["createdAt","updatedAt","inventoryId"]},where:s.and(e.query.inventoryId?{inventoryId:e.query.inventoryId}:null),include:{model:r,attributes:{exclude:["createdAt","updatedAt","sportSizeId","organizationId"]},where:s.and(e.query.inventoryId?{id:e.query.inventoryId}:null,e.query.taxable?{taxable:e.query.taxable}:null,e.query.surplus?{surplus:e.query.surplus}:null,e.query.expendable?{expendable:e.query.expendable}:null),include:[{model:n,attributes:{exclude:["sportId"]},where:s.and(e.query.sportSizeId?{id:e.query.sportSizeId}:null,e.query["sports[]"]?s.or({sportId:e.query["sports[]"]}):null,e.user.highestAccess.isCoach?s.or({id:i}):null),include:[{model:d,where:s.and(e.query["sports[]"]?s.or({id:e.query["sports[]"]}):null,e.user.highestAccess.isCoach?s.or({id:i}):null),attributes:{exclude:["organizationId"]}}]}]}}]});t.json(e.query["sports[]"]||e.query.sportSizeId?a.filter(e=>e.inventorySize.inventory):e.query.taxable||e.query.surplus||e.query.expendable?a.filter(e=>e.inventorySize):a)}catch(e){i(e)}}),m.get("/current",y(),async(e,t,i)=>{try{let i=await u.findOne({where:{credentialId:e.user.id}});console.log(i.id);let a=await o.findAll({where:{userId:i.id},attributes:{exclude:["createdAt","updatedAt","inventorySizeId","organizationId"]},include:[{model:l,attributes:{exclude:["createdAt","updatedAt","inventoryId"]},include:{model:r,attributes:{exclude:["createdAt","updatedAt","sportSizeId","organizationId"]},include:[{model:n,attributes:{exclude:["sportId"]},include:[{model:d,attributes:{exclude:["organizationId"]}}]}]}}]});t.json(a)}catch(e){i(e)}}),e.exports=m}]);